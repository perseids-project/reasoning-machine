{"version":3,"sources":["components/Machine/Machine.module.css","components/Spinner/Spinner.module.css","components/About/About.module.css","components/Instructions/MultiChar.module.css","components/Spinner/bottom.svg","components/Spinner/top.svg","components/About/machine.jpg","components/About/machine-rotated.jpg","components/Navbar/index.js","components/Navbar/Navbar.js","components/Spinner/Spinner.js","components/Spinner/index.js","components/Table/Table.js","components/Table/index.js","components/Machine/Machine.js","components/Machine/index.js","components/About/index.js","components/About/About.js","components/Instructions/MultiChar.js","components/Instructions/index.js","components/Instructions/Instructions.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","components/Instructions/Instructions.module.css"],"names":["module","exports","wrapper","text","buttonContainer","inputTable","image","multichar","multicharTop","__webpack_require__","p","Navbar","state","collapsed","toggleNavbar","_this","setState","prevState","this","react_default","a","createElement","Fragment","build","NavbarToggler","onClick","aria-label","Collapse","isOpen","navbar","className","react_router_dom","exact","to","renderCollapse","Component","mod","jsResult","nearestAngle","prevAngle","angle","firstPossibility","secondPossibility","Math","abs","Spinner","topAngle","bottomAngle","_this$state","concat","styles","src","bottom","alt","style","transform","top","_ref","prevBottomAngle","_ref2","prevTopAngle","quantificationFromAngle","0","45","90","135","180","225","270","315","phrase","subject","predicate","subjectQuantified","predicateQuantified","positive","predicateQuantifier","negationText","resultPhrase","subjectQuantified1","predicateQuantified1","positive1","subjectQuantified2","predicateQuantified2","positive2","x","y","z","finalSubjectQuantified1","finalPredicateQuantified2","Table","_quantificationFromAn","_quantificationFromAn2","Object","slicedToArray","_quantificationFromAn3","_quantificationFromAn4","fromQuery","search","_queryString$parse","queryString","parse","_queryString$parse$x","_queryString$parse$y","_queryString$parse$z","_queryString$parse$ba","ba","_queryString$parse$sa","sa","Number","Machine","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rotateBottomLink","bind","assertThisInitialized","rotateTopLink","updateInput","location","query","stringify","event","_this$props","history","_event$target","target","value","name","push","_fromQuery","_fromQuery$x","_fromQuery$y","_fromQuery$z","_fromQuery$ba","_fromQuery$sa","components_Spinner","type","aria-describedby","onChange","components_Table","About","href","machine","machineRotated","MultiChar","base","left","right","aboveLeft","aboveRight","colSpan","defaultProps","undefined","Instructions","Instructions_MultiChar","list","exampleLine","width","App","react_router","path","component","report","github","Boolean","window","hostname","match","rootElement","document","getElementById","rootComponent","basename","process","components_App","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.323cc7ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Machine_wrapper__2jO7U\",\"text\":\"Machine_text__1B7dT\",\"buttonContainer\":\"Machine_buttonContainer__5GlFj\",\"inputTable\":\"Machine_inputTable__Rt9iS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Spinner_wrapper__2kQ2o\",\"image\":\"Spinner_image__lQnnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"About_text__AAQxL\",\"image\":\"About_image__sOw_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multichar\":\"MultiChar_multichar__KjeAk\",\"multicharTop\":\"MultiChar_multicharTop__3Y6L2\"};","module.exports = __webpack_public_path__ + \"static/media/bottom.0525589f.svg\";","module.exports = __webpack_public_path__ + \"static/media/top.73de132d.svg\";","module.exports = __webpack_public_path__ + \"static/media/machine.1e7ec382.jpg\";","module.exports = __webpack_public_path__ + \"static/media/machine-rotated.862df7bb.jpg\";","import Navbar from './Navbar';\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { NavbarToggler, Collapse } from 'reactstrap';\nimport { PerseidsHeader } from 'perseids-react-components';\n\nconst renderCollapse = (collapsed) => (\n  <Collapse isOpen={!collapsed} navbar>\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" exact to=\"/\">\n          Reasoning machine\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" exact to=\"/about\">\n          About\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" exact to=\"/instructions\">\n          Instructions\n        </NavLink>\n      </li>\n    </ul>\n  </Collapse>\n);\n\nclass Navbar extends Component {\n  state = {\n    collapsed: true,\n  }\n\n  toggleNavbar = () => {\n    this.setState((prevState) => ({ collapsed: !prevState.collapsed }));\n  }\n\n  render() {\n    const { collapsed } = this.state;\n\n    return (\n      <>\n        <PerseidsHeader>\n          <NavbarToggler onClick={this.toggleNavbar} aria-label=\"navigation menu\" />\n\n          {renderCollapse(collapsed)}\n        </PerseidsHeader>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","/* eslint-disable react/no-unused-prop-types */\nimport React, { Component } from 'react';\nimport { number } from 'prop-types';\n\nimport styles from './Spinner.module.css';\n\nimport bottom from './bottom.svg';\nimport top from './top.svg';\n\nconst mod = (a) => {\n  const jsResult = a % 360;\n\n  if (jsResult < 0) {\n    return jsResult + 360;\n  }\n\n  return jsResult;\n};\n\nconst nearestAngle = (prevAngle, angle) => {\n  const firstPossibility = prevAngle + mod(angle - prevAngle);\n  const secondPossibility = prevAngle - mod(prevAngle - angle);\n\n  if (Math.abs(prevAngle - firstPossibility) < Math.abs(prevAngle - secondPossibility)) {\n    return firstPossibility;\n  }\n\n  return secondPossibility;\n};\n\nclass Spinner extends Component {\n  static propTypes = {\n    bottomAngle: number.isRequired,\n    topAngle: number.isRequired,\n  };\n\n  state = {\n    topAngle: 0,\n    bottomAngle: 0,\n  }\n\n  static getDerivedStateFromProps(\n    { bottomAngle, topAngle },\n    { bottomAngle: prevBottomAngle, topAngle: prevTopAngle },\n  ) {\n    return {\n      bottomAngle: nearestAngle(prevBottomAngle, bottomAngle),\n      topAngle: nearestAngle(prevTopAngle, topAngle),\n    };\n  }\n\n  render() {\n    const { bottomAngle, topAngle } = this.state;\n\n    return (\n      <div className={`col-12 col-lg-6 text-center ${styles.wrapper}`}>\n        <img\n          src={bottom}\n          className={styles.image}\n          alt=\"baseboard\"\n          style={{ transform: `rotate(${bottomAngle}deg)` }}\n        />\n\n        <img\n          src={top}\n          className={styles.image}\n          alt=\"spinner\"\n          style={{ transform: `rotate(${topAngle}deg)` }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport { number, string } from 'prop-types';\n\nconst quantificationFromAngle = (angle) => (\n  {\n    0: [true, false, true],\n    45: [true, true, true],\n    90: [false, false, false],\n    135: [false, true, false],\n    180: [true, false, false],\n    225: [true, true, false],\n    270: [false, false, true],\n    315: [false, true, true],\n  }[angle]\n);\n\nconst phrase = (subject, predicate, subjectQuantified, predicateQuantified, positive) => {\n  const subjectQuantifier = subjectQuantified ? 'All ' : 'Some';\n  const predicateQuantifier = predicateQuantified ? 'all ' : '(some) ';\n  const negationText = positive ? '' : ' not ';\n\n  return `${subjectQuantifier} ${subject} are ${negationText}${predicateQuantifier} ${predicate}.`;\n};\n\n// assuming order XY YZ\nconst resultPhrase = (\n  subjectQuantified1,\n  predicateQuantified1,\n  positive1,\n  subjectQuantified2,\n  predicateQuantified2,\n  positive2,\n  x,\n  y,\n  z,\n) => {\n  const invalid = 'Invalid proposition.';\n\n  if (!positive1 && !positive2) return invalid;\n\n  if (!predicateQuantified1 && !subjectQuantified2) return invalid;\n\n  let finalSubjectQuantified1 = subjectQuantified1;\n  let finalPredicateQuantified2 = predicateQuantified2;\n\n  // D'Arcy's rules don't match the board\n  // These are derived from the board\n  if (positive1\n    && subjectQuantified1\n    && predicateQuantified1\n    && positive2\n    && predicateQuantified2) {\n    finalSubjectQuantified1 = false;\n  }\n  if (positive1\n    && subjectQuantified1\n    && predicateQuantified1\n    && positive2\n    && !subjectQuantified2\n    && !predicateQuantified2) {\n    finalSubjectQuantified1 = false;\n  }\n  if (positive2\n    && subjectQuantified2\n    && predicateQuantified2\n    && positive1\n    && subjectQuantified1) {\n    finalPredicateQuantified2 = false;\n  }\n  if (positive2\n    && subjectQuantified2\n    && predicateQuantified2\n    && positive1\n    && !subjectQuantified1\n    && !predicateQuantified1) {\n    finalPredicateQuantified2 = false;\n  }\n  if (positive2\n    && subjectQuantified2\n    && predicateQuantified2\n    && !positive1\n    && !predicateQuantified1) {\n    finalPredicateQuantified2 = false;\n  }\n\n  return phrase(z, x, finalPredicateQuantified2, finalSubjectQuantified1, positive1 && positive2);\n};\n\nconst Table = ({\n  x,\n  y,\n  z,\n  bottomAngle,\n  topAngle,\n}) => {\n  const [\n    subjectQuantified1,\n    predicateQuantified1,\n    positive1,\n  ] = quantificationFromAngle(bottomAngle);\n\n  const [\n    subjectQuantified2,\n    predicateQuantified2,\n    positive2,\n  ] = quantificationFromAngle(topAngle);\n\n  return (\n    <table className=\"table table-striped table-bordered\">\n      <tbody>\n        <tr>\n          <th>\n            If\n          </th>\n          <th>\n            And\n          </th>\n          <th>\n            Then\n          </th>\n        </tr>\n        <tr>\n          <td>\n            {phrase(y, x, subjectQuantified1, predicateQuantified1, positive1)}\n          </td>\n          <td>\n            {phrase(z, y, subjectQuantified2, predicateQuantified2, positive2)}\n          </td>\n          <td>\n            {resultPhrase(\n              predicateQuantified1,\n              subjectQuantified1,\n              positive1,\n              predicateQuantified2,\n              subjectQuantified2,\n              positive2,\n              x,\n              y,\n              z,\n            )}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {phrase(x, y, subjectQuantified1, predicateQuantified1, positive1)}\n          </td>\n          <td>\n            {phrase(z, y, subjectQuantified2, predicateQuantified2, positive2)}\n          </td>\n          <td>\n            {resultPhrase(\n              subjectQuantified1,\n              predicateQuantified1,\n              positive1,\n              predicateQuantified2,\n              subjectQuantified2,\n              positive2,\n              x,\n              y,\n              z,\n            )}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {phrase(y, x, subjectQuantified1, predicateQuantified1, positive1)}\n          </td>\n          <td>\n            {phrase(y, z, subjectQuantified2, predicateQuantified2, positive2)}\n          </td>\n          <td>\n            {resultPhrase(\n              predicateQuantified1,\n              subjectQuantified1,\n              positive1,\n              subjectQuantified2,\n              predicateQuantified2,\n              positive2,\n              x,\n              y,\n              z,\n            )}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nTable.propTypes = {\n  x: string.isRequired,\n  y: string.isRequired,\n  z: string.isRequired,\n  bottomAngle: number.isRequired,\n  topAngle: number.isRequired,\n};\n\nexport default Table;\n","import Table from './Table';\n\nexport default Table;\n","import React, { Component } from 'react';\nimport { func, shape, string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport Spinner from '../Spinner';\nimport Table from '../Table';\n\nimport styles from './Machine.module.css';\n\nconst rotation = 45;\n\nconst mod = (a) => {\n  const jsResult = a % 360;\n\n  if (jsResult < 0) {\n    return jsResult + 360;\n  }\n\n  return jsResult;\n};\n\nconst fromQuery = (search) => {\n  const {\n    x = 'X',\n    y = 'Y',\n    z = 'Z',\n    ba = 0,\n    sa = 0,\n  } = queryString.parse(search);\n\n  return {\n    x,\n    y,\n    z,\n    ba: Number(ba),\n    sa: Number(sa),\n  };\n};\n\nclass Machine extends Component {\n  static propTypes = {\n    history: shape({ push: func }).isRequired,\n    location: shape({ search: string }).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.rotateBottomLink = this.rotateBottomLink.bind(this);\n    this.rotateTopLink = this.rotateTopLink.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  rotateBottomLink(angle) {\n    const { location: { search } } = this.props;\n    const query = fromQuery(search);\n\n    query.ba = mod(query.ba + angle);\n\n    return `./?${queryString.stringify(query)}`;\n  }\n\n  rotateTopLink(angle) {\n    const { location: { search } } = this.props;\n    const query = fromQuery(search);\n\n    query.sa = mod(query.sa + angle);\n\n    return `./?${queryString.stringify(query)}`;\n  }\n\n  updateInput(event) {\n    const { history, location: { search } } = this.props;\n    const { target: { value, name } } = event;\n    const query = fromQuery(search);\n\n    query[name] = value;\n\n    history.push({ search: queryString.stringify(query) });\n  }\n\n  render() {\n    const { location: { search } } = this.props;\n    const {\n      x = 'X',\n      y = 'Y',\n      z = 'Z',\n      ba: bottomAngle = 0,\n      sa: topAngle = 0,\n    } = fromQuery(search);\n    const { rotateBottomLink, rotateTopLink, updateInput } = this;\n\n    return (\n      <div className={`container pt-4 ${styles.text}`}>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h2 className=\"text-center mb-3\">\n              D&apos;Arcy Thompson&apos;s Reasoning Machine\n            </h2>\n          </div>\n        </div>\n\n        <div className=\"form-row text-center\">\n          <div className=\"col-6\">\n            <h5>\n              Rotate spinner\n            </h5>\n          </div>\n          <div className=\"col-6\">\n            <h5>\n              Rotate base-board\n            </h5>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className={`${styles.buttonContainer} col-3 col-md-2 offset-md-1`}>\n            <Link\n              className=\"btn btn-secondary btn-block\"\n              to={rotateTopLink(-rotation)}\n            >\n              ⟲\n            </Link>\n          </div>\n          <div className={`${styles.buttonContainer} col-3 col-md-2`}>\n            <Link\n              className=\"btn btn-secondary btn-block\"\n              to={rotateTopLink(rotation)}\n            >\n              ⟳\n            </Link>\n          </div>\n          <div className={`${styles.buttonContainer} col-3 col-md-2 offset-md-2`}>\n            <Link\n              className=\"btn btn-secondary btn-block\"\n              to={rotateBottomLink(-rotation)}\n            >\n              ⟲\n            </Link>\n          </div>\n          <div className={`${styles.buttonContainer} col-3 col-md-2`}>\n            <Link\n              className=\"btn btn-secondary btn-block\"\n              to={rotateBottomLink(rotation)}\n            >\n              ⟳\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <Spinner bottomAngle={bottomAngle} topAngle={topAngle} />\n\n          <div className={`col-12 col-lg-6 text-center ${styles.wrapper}`}>\n            <div className={styles.inputTable}>\n              <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">X</span>\n                </div>\n                <input type=\"text\" className=\"form-control\" aria-label=\"X\" aria-describedby=\"input x\" name=\"x\" value={x} onChange={updateInput} />\n              </div>\n\n              <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Y</span>\n                </div>\n                <input type=\"text\" className=\"form-control\" aria-label=\"Y\" aria-describedby=\"input y\" name=\"y\" value={y} onChange={updateInput} />\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Z</span>\n                </div>\n                <input type=\"text\" className=\"form-control\" aria-label=\"Z\" aria-describedby=\"input z\" name=\"z\" value={z} onChange={updateInput} />\n              </div>\n\n\n              <Table\n                x={x}\n                y={y}\n                z={z}\n                bottomAngle={bottomAngle}\n                topAngle={topAngle}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Machine;\n","import Machine from './Machine';\n\nexport default Machine;\n","import About from './About';\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './About.module.css';\n\nimport machine from './machine.jpg';\nimport machineRotated from './machine-rotated.jpg';\n\nconst About = () => (\n  <div className={`container pt-4 ${styles.text}`}>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h2 className=\"text-center mb-3\">\n          D&apos;Arcy Thompson&apos;s Reasoning Machine\n        </h2>\n\n        <p>\n          <a href=\"https://en.wikipedia.org/wiki/D%27Arcy_Wentworth_Thompson\">\n            Sir D&apos;Arcy Wentworth Thompson\n          </a>\n          {' '}\n          (1860 - 1948)\n          was a Scottish biologist, mathematician, and classics scholar.\n          He wrote on a wide variety of topics and\n          is most well-known for his book\n          {' '}\n          <a href=\"https://en.wikipedia.org/wiki/On_Growth_and_Form\">\n            On Growth and Form\n          </a>\n          , first published in 1917.\n        </p>\n\n        <p>\n          Around 1897, he invented a device that he called\n          {' '}\n          <Link to=\"/\">\n            &quot;A Very Simple Reasoning Machine.&quot;\n          </Link>\n          {' '}\n          This device consists of two pieces of cardboard\n          with one placed on top of the other.\n          The top piece has a number of holes punched in it and the bottom\n          piece has sections marked with colored tape.\n          The two pieces are attached with a pin, which allows the top piece\n          to spin, and as it spins, it shows different combinations of\n          figures and colors.\n        </p>\n\n        <p className=\"text-center\">\n          <img\n            src={machine}\n            className={`rounded ${styles.image}`}\n            alt=\"photograph of reasoning machine\"\n          />\n          <img\n            src={machineRotated}\n            className={`rounded ${styles.image}`}\n            alt=\"photograph of reasoning machine with spinner at different angle\"\n          />\n        </p>\n\n        <p>\n          The machine still works and can be seen in the archives of\n          {' '}\n          <a href=\"https://www.st-andrews.ac.uk/library/specialcollections/collections/archives/themanuscriptcollections/personal/thompsondarcywentworth1860-1948/\">\n            the University of St. Andrews\n          </a>\n          {' '}\n          (the university where D&apos;Arcy Thompson taught).\n        </p>\n\n        <p>\n          Fortunately, along with the machine itself, D&apos;Arcy left behind\n          {' '}\n          <Link to=\"/instructions\">\n            instructions\n          </Link>\n          {' '}\n          explaining how it works.\n        </p>\n\n        <p>\n          The machine is based on a logic system created by the Scottish philosopher\n          {' '}\n          <a href=\"https://en.wikipedia.org/wiki/Sir_William_Hamilton,_9th_Baronet\">\n            Sir William Hamilton\n          </a>\n          {' '}\n          (1788 - 1856)\n          .\n          Hamilton&apos;s system itself builds off of Aristotle&apos;s\n          {' '}\n          <a href=\"https://plato.stanford.edu/entries/aristotle-logic/#Syl\">\n            syllogistic\n          </a>\n          , but it doubles the number of terms by adding quantification\n          (i.e.\n          {' '}\n          <em>all of</em>, <em>some of</em>).\n          For example, where Aristotle might say &quot;all humans are animals,&quot;\n          Hamilton sees two different statements: &quot;all humans are <em>some</em> animals,&quot;\n          and &quot;all humans are <em>all</em> animals.&quot;\n        </p>\n\n        <p>\n          D&apos;Arcy&apos;s machine is designed to produce valid syllogisms\n          in Hamilton&apos;s system and identify invalid ones.\n          For example, aligning the basedboard to A and the spinner to A\n          produces the syllogism:\n        </p>\n\n        <ul>\n          <li>\n            <strong>\n              If\n            </strong>\n            {' '}\n            all Y are (some) X.\n          </li>\n          <li>\n            <strong>\n              And\n            </strong>\n            {' '}\n            all Z are (some) Y.\n          </li>\n          <li>\n            <strong>\n              Then\n            </strong>\n            {' '}\n            all Z are (some) X.\n          </li>\n        </ul>\n\n        <p>\n          Replacing X, Y, and Z with more familiar terms makes it clear\n          that this syllogism is valid:\n        </p>\n\n        <ul>\n          <li>\n            <strong>\n              If\n            </strong>\n            {' '}\n            all <em>birds</em> are <em>animals</em>.\n          </li>\n          <li>\n            <strong>\n              And\n            </strong>\n            {' '}\n            all <em>parrots</em> are <em>birds</em>.\n          </li>\n          <li>\n            <strong>\n              Then\n            </strong>\n            {' '}\n            all <em>parrots</em> are <em>animals</em>.\n          </li>\n        </ul>\n\n        <p>\n          <Link to=\"/\">\n            Try it out!\n          </Link>\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport styles from './MultiChar.module.css';\n\nconst MultiChar = ({\n  base, left, right, aboveLeft, aboveRight,\n}) => (\n  <table className={styles.multichar}>\n    <tbody>\n      {(aboveLeft || aboveRight) && (\n        <tr className={styles.multicharTop}>\n          <td>\n            <small>\n              {aboveLeft}\n            </small>\n          </td>\n          <td>\n            <small>\n              {aboveRight}\n            </small>\n          </td>\n        </tr>\n      )}\n      <tr className={styles.multicharTop}>\n        <td>\n          <small>\n            {left}\n          </small>\n        </td>\n        <td>\n          <small>\n            {right}\n          </small>\n        </td>\n      </tr>\n      <tr>\n        <td colSpan=\"2\">\n          {base}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n);\n\nMultiChar.propTypes = {\n  base: string.isRequired,\n  left: string.isRequired,\n  right: string.isRequired,\n  aboveLeft: string,\n  aboveRight: string,\n};\n\nMultiChar.defaultProps = {\n  aboveLeft: undefined,\n  aboveRight: undefined,\n};\n\nexport default MultiChar;\n","import Instructions from './Instructions';\n\nexport default Instructions;\n","import React from 'react';\n\nimport styles from './Instructions.module.css';\n\nimport MultiChar from './MultiChar';\n\nconst Instructions = () => (\n  <div className={`container pt-4 ${styles.text}`}>\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h2 className=\"text-center mb-3\">\n          A very simple Reasoning Machine.\n        </h2>\n\n        <p>\n          <small className=\"mb-3\">\n            [Written by Sir D&apos;Arcy Wentworth Thompson.\n            He probably wrote these instructions around 1897.\n            The original copy of these instructions,\n            correspondence about the machine, and the machine itself can be seen\n            in the archives of the University of St. Andrews.]\n          </small>\n        </p>\n\n        <p>\n          In the propositions U, A, Y, I, we quantify respectively :- subject\n          and predicate, subject alone, predicate alone, and lastly, neither.\n          We may symbolize this fact by writing it :-\n        </p>\n\n        <div>\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"U\" left=\"s\" right=\"p\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"A\" left=\"s\" right=\"-\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"Y\" left=\"-\" right=\"p\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"I\" left=\"-\" right=\"-\" />\n          &nbsp;\n          ,\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          or, if we prefer it,\n        </div>\n\n        <br />\n\n        <div>\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"U\" left=\"+\" right=\"+\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"A\" left=\"+\" right=\"-\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"Y\" left=\"-\" right=\"+\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"I\" left=\"-\" right=\"-\" />\n          &nbsp;\n          ,\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          and, in like manner,\n        </div>\n\n        <br />\n\n        <p>\n          the corresponding negatives\n        </p>\n\n        <div>\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"E\" left=\"s\" right=\"p\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"η\" left=\"s\" right=\"-\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"o\" left=\"-\" right=\"p\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"ω\" left=\"-\" right=\"-\" />\n          &nbsp;\n          &nbsp;\n          <u>or</u>\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"E\" left=\"+\" right=\"+\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"η\" left=\"+\" right=\"-\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"o\" left=\"-\" right=\"+\" />\n          &nbsp;\n          &nbsp;\n          <MultiChar base=\"ω\" left=\"-\" right=\"-\" />\n        </div>\n        <br />\n\n        <p>\n          In the these figures, subject and predicate are, in each premise,\n          respectively :-\n        </p>\n\n        <p>\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          &nbsp;\n          yx, zy, zx ; xy, zy, zx ; yx, yz, zx.\n        </p>\n\n        <p>\n          Now, by superimposing, one upon another, over these sets of symbols, –\n          those, namely, for the propositions, for their unimplied qualifications, and for the\n          figures, – we may ascertain the conclusion of any syllogism\n          provided that we have in mind the following rules :-\n        </p>\n\n        <ol className={styles.list}>\n          <li>\n            That two negative premises are inadmissible\n          </li>\n          <li>\n            That if one premise be negative, the conclusion is negative.\n          </li>\n          <li>\n            That the middle term must be quantified at least once.\n          </li>\n          <li>\n            That nothing may be quantified in the conclusion that\n            has not been quantified in the premises.\n          </li>\n          <li>\n            That everything must be quantified in the conclusion that\n            has been quantified in the premises :-\n            <br />\n\n            Except that, when the double-quantified affirmation\n            proposition U occurs in conjunction with a less quantified\n            proposition [viz. with A, Y, I, η, ο or ω] then the\n            quantification of the former (other than its quantification of the\n            middle term y) shall be neglected in the conclusion.\n          </li>\n        </ol>\n\n        <p>\n          <strong>\n            Note.\n          </strong>\n          {' '}\n          This apparent exception simply depends upon the fact\n          that in such cases the proposition U quantifies, or states,\n          more than is required for the argument.\n          {' '}\n          <u>\n            All y’s are all x’s\n          </u>\n          , when followed by the major\n          proposition\n          {' '}\n          <u>\n            all z’s are some y’s\n          </u>\n          , has stated more than\n          is necessary, for the same conclusion, viz. that\n          {' '}\n          <u>\n            all z’s are some x’s\n          </u>\n          , would follow equally from the major\n          premise\n          {' '}\n          <u>\n            all z’s are some x’s\n          </u>\n          . In other words, in the\n          1\n          <sup>\n            st\n          </sup>\n          {' '}\n          figure, UA leads only to the same result as\n          AA, and in the\n          2\n          <sup>\n            nd\n          </sup>\n          {' '}\n          and\n          3\n          <sup>\n            rd\n          </sup>\n          {' '}\n          figures only to the same result as YA.\n          In point of fact, the proposition U is only of real utility when\n          used in conjunction with another doubly quantified proposition, viz.\n          in UU, UE, perhaps even in the former case alone.\n        </p>\n\n        <p>\n          The method of superposition, indicated above, may be employed by\n          itself, or used in the construction of a Reasoning Machine.\n          The following examples illustrate the matter by itself.\n        </p>\n\n        <ol>\n          <li>\n            Given the combination AY\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    Then we have in the first figure,\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"y\" left=\"+\" aboveRight=\"x\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"Y\" aboveLeft=\"z\" left=\"-\" aboveRight=\"y\" right=\"+\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    <MultiChar base=\"&nbsp;\" aboveLeft=\"-\" left=\"z\" aboveRight=\"-\" right=\"x\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    I\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    .. .. .. .. 2\n                    <sup>\n                      nd\n                    </sup>\n                    {' '}\n                    ..,\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"x\" left=\"+\" aboveRight=\"y\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"Y\" aboveLeft=\"z\" left=\"-\" aboveRight=\"y\" right=\"+\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    <MultiChar base=\"&nbsp;\" aboveLeft=\"-\" left=\"z\" aboveRight=\"+\" right=\"x\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    Y\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    .. .. .. .. 3\n                    <sup>\n                      rd\n                    </sup>\n                    {' '}\n                    ..,\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"y\" left=\"+\" aboveRight=\"x\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"Y\" aboveLeft=\"y\" left=\"-\" aboveRight=\"z\" right=\"+\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    <MultiChar base=\"&nbsp;\" aboveLeft=\"+\" left=\"z\" aboveRight=\"-\" right=\"x\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    A\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n          </li>\n          <li>\n            Given the combination Aω\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    We have in the first figure,\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"y\" left=\"+\" aboveRight=\"x\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"ω\" aboveLeft=\"z\" left=\"-\" aboveRight=\"y\" right=\"-\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    <MultiChar base=\"&nbsp;\" aboveLeft=\"-\" left=\"z\" aboveRight=\"-\" right=\"x\" />\n                    &nbsp;\n                    <small>\n                      (neg.)\n                    </small>\n                    &nbsp;\n                    =\n                    &nbsp;\n                    ω\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    .. .. .. .. 2\n                    <sup>\n                      nd\n                    </sup>\n                    {' '}\n                    ..\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"x\" left=\"+\" aboveRight=\"y\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"ω\" aboveLeft=\"z\" left=\"-\" aboveRight=\"y\" right=\"-\" />\n                    &nbsp;\n                    -\n                    &nbsp;\n                    Invalid,\n                    {' '}\n                    <u>\n                      y unquantified.\n                    </u>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n            <table>\n              <tbody>\n                <tr>\n                  <td className={styles.exampleLine} width=\"250\">\n                    .. .. .. .. 3\n                    <sup>\n                      rd\n                    </sup>\n                    {' '}\n                    ..\n                  </td>\n                  <td>\n                    &nbsp;\n                    <MultiChar base=\"A\" aboveLeft=\"y\" left=\"+\" aboveRight=\"x\" right=\"-\" />\n                    &nbsp;\n                    &nbsp;\n                    <MultiChar base=\"ω\" aboveLeft=\"y\" left=\"-\" aboveRight=\"z\" right=\"-\" />\n                    &nbsp;\n                    =\n                    &nbsp;\n                    <MultiChar base=\"&nbsp;\" aboveLeft=\"-\" left=\"z\" aboveRight=\"-\" right=\"x\" />\n                    &nbsp;\n                    <small>\n                      (neg.)\n                    </small>\n                    &nbsp;\n                    =\n                    &nbsp;\n                    ω\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <br />\n\n          </li>\n        </ol>\n\n        <h2 className=\"text-center mb-3\">\n          Rules of the use of the Reasoning Machine.\n        </h2>\n\n        <p>\n          Place the cards representing the propositions in their place\n          and order on the base-board. The terms that are quantified\n          will then appear through the holes.\n        </p>\n\n        <ol>\n          <li>\n            A red danger-signal in the first or lowest compartment\n            shows the whole combination to be invalid (double negative).\n          </li>\n          <li>\n            A red danger-signal in the compartment assigned to any\n            figure shows that figure to be invalid (unquantified middle).\n          </li>\n          <li>\n            Quantify in the conclusion anything that is shown to be\n            quantified in the premises\n            [In other words, transfer to the zx of the conclusion\n            the symbols (+ or -) that the z and x bear in the premises.],\n            unless, a green signal of caution directs\n            [according to the preceding tule V, EXC.] that the quantification\n            of U is to be disregarded in the conclusion.\n          </li>\n        </ol>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Instructions;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PerseidsFooter } from 'perseids-react-components';\n\nimport Navbar from '../Navbar';\nimport Machine from '../Machine';\nimport About from '../About';\nimport Instructions from '../Instructions';\n\nfunction App() {\n  return (\n    <>\n      <Route path=\"/\" component={Navbar} />\n\n      <Switch>\n        <Route exact path=\"/\" component={Machine} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/instructions\" component={Instructions} />\n      </Switch>\n\n      <PerseidsFooter\n        report=\"https://github.com/perseids-project/reasoning-machine\"\n        github=\"https://github.com/perseids-project/reasoning-machine/issues\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport { unregister } from './serviceWorker';\n\nimport 'typeface-tinos';\nimport 'typeface-arimo';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\n\nconst rootElement = document.getElementById('root');\nconst rootComponent = (\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>\n);\n\nrender(rootComponent, rootElement);\n\nunregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Instructions_text__2l89D\",\"list\":\"Instructions_list__37Lzo\",\"exampleLine\":\"Instructions_exampleLine__MwiB-\"};"],"sourceRoot":""}